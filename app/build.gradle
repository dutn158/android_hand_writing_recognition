apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "com.dutn.handwritingdemo"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }

    productFlavors {
        dev {
            applicationId "com.uit.mh.mnistdemo"
        }

        prod {
            applicationId "com.uit.mh.mnistdemo"
        }
    }

    signingConfigs {
        debug {
            keyAlias 'android'
            keyPassword 'android'
            storeFile file('./keystores/debug.jks')
            storePassword 'android'
        }
        release {
            keyAlias 'xpc_release'
            keyPassword 'Xpc@321'
            storeFile file('./keystores/xpc_release.jks')
            storePassword 'Xpc@321'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        debug {
            shrinkResources false
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                renameAPK(variant, defaultConfig)
            }
        }

        release {
            shrinkResources false
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                renameAPK(variant, defaultConfig)
            }
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/'] } }
}

def renameAPK(variant, defaultConfig) {
    variant.outputs.each { output ->
        def file = output.packageApplication.outputFile
        def fileName = "MNIST_Android" + "-" + defaultConfig.versionName + ".apk"
        output.packageApplication.outputFile = new File(file.parent, fileName)
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'

    // gosn
    compile 'com.google.code.gson:gson:2.8.1'

    // ads
    compile 'com.google.android.gms:play-services-ads:10.2.4'
}

apply plugin: 'com.google.gms.google-services'